# This file is part of file-browser.
#
# Copyright (C)
#  2018 Alexander Haase <ahaase@alexhaase.de>
#
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#
# NOTE: This file includes autogenerated code from Symfony, also licensed under
#       the MIT license.

# Static service configuration for the application.
#
# This file stores the static configuration parameters, that don't need to be
# changed on each machine where the app is deployed. For more information see:
#
#   https://symfony.com/doc/current/best_practices/configuration.html\
#     #application-related-configuration
parameters:
    # The storage directory. Thats were the files are located to be served by
    # this application. Change this to any directory you want to serve. If the
    # webserver doesn't restrict this, the storage directory may also be outside
    # of the webroot.
    storage.dir: '%kernel.project_dir%/files'

services:
    # Default configuration for services in *this* file.
    _defaults:
        # Automatically injects dependencies in your services.
        autowire: true
        # Automatically registers your services as commands, event subscribers,
        # etc.
        autoconfigure: true
        # Allows optimizing the container by removing unused services; this also
        # means fetching services directly from the container via
        # $container->get() won't work. The best practice is to be explicit
        # about your dependencies anyway.
        public: false

    # Makes classes in src/ available to be used as services. This creates a
    # service per class whose id is the fully-qualified class name.
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests}'

    # Controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class.
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # Setup additional parameters for the StorageLocator, as it uses parameters
    # defined above in its constructor.
    App\Service\StorageLocator:
        arguments: ['%storage.dir%']
